[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["Ravi Riley <raviriley@gmail.com>", "Jay Sethi"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
flask = "^3.0.0"
opencv-python = "^4.8.1.78"
python-dotenv = "^1.0.0"
pyaudio = "^0.2.13"
gtts = "^2.4.0"
pygame = "^2.5.2"

[tool.poetry.dev-dependencies]
pytest = "^7.2.0"
isort = "^5.11.4"
flake8 = "^6.0.0"
mypy = "^0.991"
pytest-cov = "^4.0.0"
black = "^22.12.0"
autoflake = "^2.0.0"
flake8-bugbear = "^22.12.6"
pep8-naming = "^0.13.3"

[tool.mypy]
python_version = "3.10"
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
ignore_missing_imports = true

[tool.isort]
line_length = 120
multi_line_output = 3
use_parentheses = true
include_trailing_comma = true
force_grid_wrap = 0

[tool.black]
line_length = 120
exclude = '''
/(
    \.eggs         # exclude a few common directories in the
  | \.git          # root of the project
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.poetry.scripts]
lint = "scripts.scripts:lint"
l = "scripts.scripts:lint"
format = "scripts.scripts:format_code"
f = "scripts.scripts:format_code"
format-lint = "scripts.scripts:format_and_lint"
fl = "scripts.scripts:format_and_lint"
test = "scripts.scripts:test"
t = "scripts.scripts:test"
format-lint-test = "scripts.scripts:format_lint_test"
flt = "scripts.scripts:format_lint_test"
dev = "scripts.scripts:dev"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
